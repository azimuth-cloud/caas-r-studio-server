---

- name: Install Terraform binary
  include_role:
    name: stackhpc.terraform.install

- name: Make Terraform project directory
  file:
    path: "{{ terraform_project_path }}"
    state: directory

- name: Write backend configuration
  copy:
    content: |
      terraform {
        backend "{{ terraform_backend_type }}" { }
      }
    dest: "{{ terraform_project_path }}/backend.tf"

# Patching in this appliance is implemented as a switch to a new base image
# So unless explicitly patching, we want to use the same image as last time
# To do this, we query the previous Terraform state before updating
- block:
    - name: Get previous Terraform state
      stackhpc.terraform.terraform_output:
        binary_path: "{{ terraform_binary_path }}"
        project_path: "{{ terraform_project_path }}"
        backend_config: "{{ terraform_backend_config }}"
      register: cluster_infra_terraform_output

    - name: Extract image from Terraform state
      set_fact:
        cluster_previous_image: "{{ cluster_infra_terraform_output.outputs.cluster_image.value }}"
      when: '"cluster_image" in cluster_infra_terraform_output.outputs'
  when:
    - terraform_state == "present"
    - cluster_upgrade_system_packages is not defined or not cluster_upgrade_system_packages

- name: Template Terraform files into project directory
  # TODO: REMOVE THESE VARS
  vars:
    cluster_user_ssh_public_key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC4zwdj1GNelbQ6B0p2HelKwsLR672BpRLYyKoRiNOJpQuheBkWkKsZp1O1K8Tj4QtK11mkYOnyHggBw8t2OubeYeR97YD1o7uWL/Pt4azxj1+FzPVL1ujDks27tbjRyCjNMEyOLhRyS26xr/0iRsN12LQtQDSGm5o+N1Wq+Wdy2rPYlhFg3QkE1SecODBkS0vHXyD1mWrcB6rNWIR3Uox0jIT+tw94oCWihaxX8S0nGHc4GafpyBuUfd0LR6TjOD4VjBlTzxwj0SgQGaiKy04vWuKE+/kmV3h8BQg8WmCQSqEBDW04gn93NJetS83oJEk7aqFrtpgjart8KQs46y/Jp8ifIbddVDW/LwxBOo+8PxkxwZUYuwBb7Nr3876wLyHnhpMHFqO8we8H6TRZYZFG3ertwht8NuFXgtpeIZCoyUmAnFTL+8Pwe7FnWL4e8BgAJ1z9LQDT3DsHJ6VbDcYTwoAga773tlo8pLx7UF+oM2sQpEkP8d1beuFeMLbjxys=
  template:
    src: "{{ item }}.j2"
    dest: "{{ terraform_project_path }}/{{ item }}"
  loop:
    - outputs.tf
    - providers.tf
    - resources.tf

- name: Provision infrastructure
  community.general.terraform:
    binary_path: "{{ terraform_binary_path }}"
    project_path: "{{ terraform_project_path }}"
    state: "{{ terraform_state }}"
    backend_config: "{{ terraform_backend_config }}"
    force_init: yes
    init_reconfigure: yes
